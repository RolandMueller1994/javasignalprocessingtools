x = 1:1000; 
nCoefs = 80; 
Fg = 0.5;
y = sin(10*x) + sin(100*x) + sin(500*x) + sin(3000*x); 
y_conv = f_filter(y, Fg, nCoefs);


tau = -(nCoefs-1)/2 : (nCoefs-1)/2;
hlp = sin(2*Fg*tau)./(2*Fg*tau); 
plot(hlp) %calculation of coefs
y_canon = f_filter_canon2( hlp, y); 

%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\Users\Andre\Documents\GitHub\javasignalprocessingtools\javasignalprocessingtools\src\matlab_files\FIRFilterTest.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/10/01 16:04:18

%% Initialize variables.
filename = 'C:\Users\Andre\Documents\GitHub\javasignalprocessingtools\javasignalprocessingtools\src\matlab_files\FIRFilterTest.txt';
delimiter = ' ';

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'TextType', 'string',  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
x_java = dataArray{:, 1};
y_java = dataArray{:, 2};
%yf_java = dataArray{:, 3};


%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans;
subplot(3,1,1)
plot(x, y)
subplot(3,1,2)
plot(x, y, x_java, y_java)
subplot(3,1,3)
plot(x, y_canon, x_java, yf_java)


